// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=regisys/design
// --out=$(GOPATH)/src/regisys
// --version=v1.1.0-dirty
//
// API "regisys": Application User Types
//
// The content of this file is auto-generated, DO NOT MODIFY

package client

import (
	"github.com/goadesign/goa"
	"time"
)

// addItemPayload user type.
type addItemPayload struct {
	// item name
	Item *string `form:"item,omitempty" json:"item,omitempty" xml:"item,omitempty"`
	// Membership discount
	MemberPrice *int `form:"member_price,omitempty" json:"member_price,omitempty" xml:"member_price,omitempty"`
	// item price
	Price *int `form:"price,omitempty" json:"price,omitempty" xml:"price,omitempty"`
	// item quantity
	Quantity *int `form:"quantity,omitempty" json:"quantity,omitempty" xml:"quantity,omitempty"`
}

// Validate validates the addItemPayload type instance.
func (ut *addItemPayload) Validate() (err error) {
	if ut.Item == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "item"))
	}
	if ut.Price == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "price"))
	}
	if ut.MemberPrice == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "member_price"))
	}
	if ut.Quantity == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "quantity"))
	}
	return
}

// Publicize creates AddItemPayload from addItemPayload
func (ut *addItemPayload) Publicize() *AddItemPayload {
	var pub AddItemPayload
	if ut.Item != nil {
		pub.Item = *ut.Item
	}
	if ut.MemberPrice != nil {
		pub.MemberPrice = *ut.MemberPrice
	}
	if ut.Price != nil {
		pub.Price = *ut.Price
	}
	if ut.Quantity != nil {
		pub.Quantity = *ut.Quantity
	}
	return &pub
}

// AddItemPayload user type.
type AddItemPayload struct {
	// item name
	Item string `form:"item" json:"item" xml:"item"`
	// Membership discount
	MemberPrice int `form:"member_price" json:"member_price" xml:"member_price"`
	// item price
	Price int `form:"price" json:"price" xml:"price"`
	// item quantity
	Quantity int `form:"quantity" json:"quantity" xml:"quantity"`
}

// Validate validates the AddItemPayload type instance.
func (ut *AddItemPayload) Validate() (err error) {
	if ut.Item == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "item"))
	}

	return
}

// addOrderPayload user type.
type addOrderPayload struct {
	// Order date
	Date *time.Time `form:"date,omitempty" json:"date,omitempty" xml:"date,omitempty"`
	// Unique item ID
	ItemID *int `form:"item_id,omitempty" json:"item_id,omitempty" xml:"item_id,omitempty"`
	// Item price
	Price *int `form:"price,omitempty" json:"price,omitempty" xml:"price,omitempty"`
	// Item quantity
	Quantity *int `form:"quantity,omitempty" json:"quantity,omitempty" xml:"quantity,omitempty"`
	// Register's name
	Register *string `form:"register,omitempty" json:"register,omitempty" xml:"register,omitempty"`
}

// Validate validates the addOrderPayload type instance.
func (ut *addOrderPayload) Validate() (err error) {
	if ut.ItemID == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "item_id"))
	}
	if ut.Quantity == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "quantity"))
	}
	if ut.Price == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "price"))
	}
	if ut.Register == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "register"))
	}
	if ut.Date == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "date"))
	}
	return
}

// Publicize creates AddOrderPayload from addOrderPayload
func (ut *addOrderPayload) Publicize() *AddOrderPayload {
	var pub AddOrderPayload
	if ut.Date != nil {
		pub.Date = *ut.Date
	}
	if ut.ItemID != nil {
		pub.ItemID = *ut.ItemID
	}
	if ut.Price != nil {
		pub.Price = *ut.Price
	}
	if ut.Quantity != nil {
		pub.Quantity = *ut.Quantity
	}
	if ut.Register != nil {
		pub.Register = *ut.Register
	}
	return &pub
}

// AddOrderPayload user type.
type AddOrderPayload struct {
	// Order date
	Date time.Time `form:"date" json:"date" xml:"date"`
	// Unique item ID
	ItemID int `form:"item_id" json:"item_id" xml:"item_id"`
	// Item price
	Price int `form:"price" json:"price" xml:"price"`
	// Item quantity
	Quantity int `form:"quantity" json:"quantity" xml:"quantity"`
	// Register's name
	Register string `form:"register" json:"register" xml:"register"`
}

// Validate validates the AddOrderPayload type instance.
func (ut *AddOrderPayload) Validate() (err error) {

	if ut.Register == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "register"))
	}

	return
}

// modifyItemPayload user type.
type modifyItemPayload struct {
	// Unique item ID
	ID *int `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// item name
	Item *string `form:"item,omitempty" json:"item,omitempty" xml:"item,omitempty"`
	// Membership discount
	MemberPrice *int `form:"member_price,omitempty" json:"member_price,omitempty" xml:"member_price,omitempty"`
	// item price
	Price *int `form:"price,omitempty" json:"price,omitempty" xml:"price,omitempty"`
	// item quantity
	Quantity *int `form:"quantity,omitempty" json:"quantity,omitempty" xml:"quantity,omitempty"`
}

// Validate validates the modifyItemPayload type instance.
func (ut *modifyItemPayload) Validate() (err error) {
	if ut.ID == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "id"))
	}
	return
}

// Publicize creates ModifyItemPayload from modifyItemPayload
func (ut *modifyItemPayload) Publicize() *ModifyItemPayload {
	var pub ModifyItemPayload
	if ut.ID != nil {
		pub.ID = *ut.ID
	}
	if ut.Item != nil {
		pub.Item = ut.Item
	}
	if ut.MemberPrice != nil {
		pub.MemberPrice = ut.MemberPrice
	}
	if ut.Price != nil {
		pub.Price = ut.Price
	}
	if ut.Quantity != nil {
		pub.Quantity = ut.Quantity
	}
	return &pub
}

// ModifyItemPayload user type.
type ModifyItemPayload struct {
	// Unique item ID
	ID int `form:"id" json:"id" xml:"id"`
	// item name
	Item *string `form:"item,omitempty" json:"item,omitempty" xml:"item,omitempty"`
	// Membership discount
	MemberPrice *int `form:"member_price,omitempty" json:"member_price,omitempty" xml:"member_price,omitempty"`
	// item price
	Price *int `form:"price,omitempty" json:"price,omitempty" xml:"price,omitempty"`
	// item quantity
	Quantity *int `form:"quantity,omitempty" json:"quantity,omitempty" xml:"quantity,omitempty"`
}
