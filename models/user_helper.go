// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/riku179/regisys-server/design
// --out=$(GOPATH)/src/github.com/riku179/regisys-server
// --version=v1.1.0-dirty
//
// API "regisys": Model Helpers
//
// The content of this file is auto-generated, DO NOT MODIFY

package models

import (
	"time"

	"github.com/goadesign/goa"
	"github.com/jinzhu/gorm"
	"github.com/riku179/regisys-server/app"
	"golang.org/x/net/context"
)

// MediaType Retrieval Functions

// ListRegisysUser returns an array of view: default.
func (m *UserDB) ListRegisysUser(ctx context.Context) []*app.RegisysUser {
	defer goa.MeasureSince([]string{"goa", "db", "regisysUser", "listregisysUser"}, time.Now())

	var native []*User
	var objs []*app.RegisysUser
	err := m.Db.Scopes().Table(m.TableName()).Find(&native).Error

	if err != nil {
		goa.LogError(ctx, "error listing User", "error", err.Error())
		return objs
	}

	for _, t := range native {
		objs = append(objs, t.UserToRegisysUser())
	}

	return objs
}

// UserToRegisysUser loads a User and builds the default view of media type RegisysUser.
func (m *User) UserToRegisysUser() *app.RegisysUser {
	user := &app.RegisysUser{}
	user.ID = m.ID
	user.IsMember = m.IsMember
	user.IsRegister = m.IsRegister
	user.Name = m.Name

	return user
}

// OneRegisysUser loads a User and builds the default view of media type RegisysUser.
func (m *UserDB) OneRegisysUser(ctx context.Context, id int) (*app.RegisysUser, error) {
	defer goa.MeasureSince([]string{"goa", "db", "regisysUser", "oneregisysUser"}, time.Now())

	var native User
	err := m.Db.Scopes().Table(m.TableName()).Preload("Items").Preload("Orders").Where("id = ?", id).Find(&native).Error

	if err != nil && err != gorm.ErrRecordNotFound {
		goa.LogError(ctx, "error getting User", "error", err.Error())
		return nil, err
	}

	view := *native.UserToRegisysUser()
	return &view, err
}
