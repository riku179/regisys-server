// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/riku179/regisys/design
// --out=$(GOPATH)/src/github.com/riku179/regisys
// --version=v1.1.0-dirty
//
// API "regisys": Model Helpers
//
// The content of this file is auto-generated, DO NOT MODIFY

package models

import (
	"github.com/goadesign/goa"
	"github.com/jinzhu/gorm"
	"github.com/riku179/regisys/app"
	"golang.org/x/net/context"
	"time"
)

// MediaType Retrieval Functions

// ListGoaExampleUser returns an array of view: default.
func (m *UserDB) ListGoaExampleUser(ctx context.Context) []*app.GoaExampleUser {
	defer goa.MeasureSince([]string{"goa", "db", "goaExampleUser", "listgoaExampleUser"}, time.Now())

	var native []*User
	var objs []*app.GoaExampleUser
	err := m.Db.Scopes().Table(m.TableName()).Find(&native).Error

	if err != nil {
		goa.LogError(ctx, "error listing User", "error", err.Error())
		return objs
	}

	for _, t := range native {
		objs = append(objs, t.UserToGoaExampleUser())
	}

	return objs
}

// UserToGoaExampleUser loads a User and builds the default view of media type GoaExampleUser.
func (m *User) UserToGoaExampleUser() *app.GoaExampleUser {
	user := &app.GoaExampleUser{}
	user.Group = m.Group
	user.ID = m.ID
	user.IsMember = m.IsMember
	user.Name = m.Name

	return user
}

// OneGoaExampleUser loads a User and builds the default view of media type GoaExampleUser.
func (m *UserDB) OneGoaExampleUser(ctx context.Context, id int) (*app.GoaExampleUser, error) {
	defer goa.MeasureSince([]string{"goa", "db", "goaExampleUser", "onegoaExampleUser"}, time.Now())

	var native User
	err := m.Db.Scopes().Table(m.TableName()).Preload("Items").Preload("Orders").Where("id = ?", id).Find(&native).Error

	if err != nil && err != gorm.ErrRecordNotFound {
		goa.LogError(ctx, "error getting User", "error", err.Error())
		return nil, err
	}

	view := *native.UserToGoaExampleUser()
	return &view, err
}
