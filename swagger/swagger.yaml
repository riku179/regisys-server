consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  AddGoodsPayload:
    example:
      item_name: Molestiae magni quae ut tenetur nihil eos.
      member_price: 6.3114837e+18
      price: 7.849536e+18
      quantity: 5.152369e+18
    properties:
      item_name:
        description: item name
        example: Molestiae magni quae ut tenetur nihil eos.
        type: string
      member_price:
        description: Membership discount
        example: 6.3114837e+18
        format: int64
        type: integer
      price:
        description: item price
        example: 7.849536e+18
        format: int64
        type: integer
      quantity:
        description: item quantity
        example: 5.152369e+18
        format: int64
        type: integer
    required:
    - item_name
    - price
    - member_price
    - quantity
    title: AddGoodsPayload
    type: object
  AddOrderPayload:
    example:
      item_id: 4.1325443e+17
      price: 6.926203e+17
      quantity: 5.899157e+18
      user_id: 1.1054375e+18
    properties:
      item_id:
        description: Unique item ID
        example: 4.1325443e+17
        format: int64
        type: integer
      price:
        description: item price
        example: 6.926203e+17
        format: int64
        type: integer
      quantity:
        description: item quantity
        example: 5.899157e+18
        format: int64
        type: integer
      user_id:
        description: Register's user ID
        example: 1.1054375e+18
        format: int64
        type: integer
    required:
    - item_id
    - quantity
    - price
    - user_id
    title: AddOrderPayload
    type: object
  AddUserPayload:
    example:
      name: Illo vero voluptatum quidem.
      password: Neque id omnis eveniet ut sed aliquam.
    properties:
      name:
        example: Illo vero voluptatum quidem.
        type: string
      password:
        example: Neque id omnis eveniet ut sed aliquam.
        type: string
    required:
    - name
    - password
    title: AddUserPayload
    type: object
  ModifyGoodsPayload:
    example:
      id: 8.146832e+18
      item_name: Voluptas aut illo animi dicta aperiam.
      member_price: 6.558842e+17
      price: 5.6931195e+18
      quantity: 1.7620761e+18
    properties:
      id:
        description: Unique item ID
        example: 8.146832e+18
        format: int64
        type: integer
      item_name:
        description: item name
        example: Voluptas aut illo animi dicta aperiam.
        type: string
      member_price:
        description: Membership discount
        example: 6.558842e+17
        format: int64
        type: integer
      price:
        description: item price
        example: 5.6931195e+18
        format: int64
        type: integer
      quantity:
        description: item quantity
        example: 1.7620761e+18
        format: int64
        type: integer
    required:
    - id
    title: ModifyGoodsPayload
    type: object
  ModifyUserPayload:
    example:
      group: normal
    properties:
      group:
        enum:
        - admin
        - register
        - normal
        example: normal
        type: string
    required:
    - group
    title: ModifyUserPayload
    type: object
  RegisysItems:
    description: An item (default view)
    example:
      id: 8.8047286e+18
      item_name: Ea voluptas.
      member_price: 6.0676516e+18
      price: 4.8955365e+18
      quantity: 2.1326141e+18
      user_id: 7.137601e+18
      user_name: Et quia natus voluptates maiores nemo.
    properties:
      id:
        description: Unique item ID
        example: 8.8047286e+18
        format: int64
        type: integer
      item_name:
        description: item name
        example: Ea voluptas.
        type: string
      member_price:
        description: Membership discount
        example: 6.0676516e+18
        format: int64
        type: integer
      price:
        description: item price
        example: 4.8955365e+18
        format: int64
        type: integer
      quantity:
        description: item quantity
        example: 2.1326141e+18
        format: int64
        type: integer
      user_id:
        description: Unique User ID
        example: 7.137601e+18
        format: int64
        type: integer
      user_name:
        description: Username
        example: Et quia natus voluptates maiores nemo.
        type: string
    required:
    - id
    - item_name
    - price
    - member_price
    - user_id
    - user_name
    - quantity
    title: 'Mediatype identifier: application/vnd.regisys.items+json; view=default'
    type: object
  RegisysItemsCollection:
    description: RegisysItemsCollection is the media type for an array of RegisysItems
      (default view)
    example:
    - id: 8.8047286e+18
      item_name: Ea voluptas.
      member_price: 6.0676516e+18
      price: 4.8955365e+18
      quantity: 2.1326141e+18
      user_id: 7.137601e+18
      user_name: Et quia natus voluptates maiores nemo.
    items:
      $ref: '#/definitions/RegisysItems'
    title: 'Mediatype identifier: application/vnd.regisys.items+json; type=collection;
      view=default'
    type: array
  RegisysOrders:
    description: An order (default view)
    example:
      date: 2001-03-01T17:32:21+09:00
      id: 2.9891975e+18
      item_id: 1.4690026e+18
      item_name: Consequuntur officiis fuga ab officiis omnis dolorem.
      price: 1.5330122e+18
      quantity: 8.314856e+18
      user_id: 5.18985e+18
    properties:
      date:
        description: Order date
        example: 2001-03-01T17:32:21+09:00
        format: date-time
        type: string
      id:
        description: Unique order ID
        example: 2.9891975e+18
        format: int64
        type: integer
      item_id:
        description: Unique item ID
        example: 1.4690026e+18
        format: int64
        type: integer
      item_name:
        description: item name
        example: Consequuntur officiis fuga ab officiis omnis dolorem.
        type: string
      price:
        description: item price
        example: 1.5330122e+18
        format: int64
        type: integer
      quantity:
        description: item quantity
        example: 8.314856e+18
        format: int64
        type: integer
      user_id:
        description: Register's user ID
        example: 5.18985e+18
        format: int64
        type: integer
    required:
    - id
    - item_id
    - item_name
    - quantity
    - price
    - user_id
    - date
    title: 'Mediatype identifier: application/vnd.regisys.orders+json; view=default'
    type: object
  RegisysOrdersCollection:
    description: RegisysOrdersCollection is the media type for an array of RegisysOrders
      (default view)
    example:
    - date: 2001-03-01T17:32:21+09:00
      id: 2.9891975e+18
      item_id: 1.4690026e+18
      item_name: Consequuntur officiis fuga ab officiis omnis dolorem.
      price: 1.5330122e+18
      quantity: 8.314856e+18
      user_id: 5.18985e+18
    items:
      $ref: '#/definitions/RegisysOrders'
    title: 'Mediatype identifier: application/vnd.regisys.orders+json; type=collection;
      view=default'
    type: array
  RegisysToken:
    description: Username and ID (default view)
    example:
      group: Maxime quis hic facere distinctio.
      id: 6.8017796e+17
      is_member: false
      username: Voluptatibus sed at voluptas inventore.
    properties:
      group:
        description: Group of user
        example: Maxime quis hic facere distinctio.
        type: string
      id:
        description: Unique user ID
        example: 6.8017796e+17
        format: int64
        type: integer
      is_member:
        description: Is member of MMA
        example: false
        type: boolean
      username:
        description: Username
        example: Voluptatibus sed at voluptas inventore.
        type: string
    required:
    - id
    - username
    - group
    - is_member
    title: 'Mediatype identifier: application/vnd.regisys.token+json; view=default'
    type: object
  RegisysUser:
    description: Users (default view)
    example:
      group: Unde ut rerum.
      id: 8.0305927e+18
      is_member: true
      name: Quam quia rerum atque.
    properties:
      group:
        description: Group of user
        example: Unde ut rerum.
        type: string
      id:
        description: Unique user ID
        example: 8.0305927e+18
        format: int64
        type: integer
      is_member:
        description: Is member of MMA
        example: true
        type: boolean
      name:
        description: Username
        example: Quam quia rerum atque.
        type: string
    required:
    - id
    - name
    - group
    - is_member
    title: 'Mediatype identifier: application/vnd.regisys.user+json; view=default'
    type: object
  RegisysUserCollection:
    description: RegisysUserCollection is the media type for an array of RegisysUser
      (default view)
    example:
    - group: Unde ut rerum.
      id: 8.0305927e+18
      is_member: true
      name: Quam quia rerum atque.
    - group: Unde ut rerum.
      id: 8.0305927e+18
      is_member: true
      name: Quam quia rerum atque.
    - group: Unde ut rerum.
      id: 8.0305927e+18
      is_member: true
      name: Quam quia rerum atque.
    items:
      $ref: '#/definitions/RegisysUser'
    title: 'Mediatype identifier: application/vnd.regisys.user+json; type=collection;
      view=default'
    type: array
host: localhost:8080
info:
  title: Register System for Junk-Ichi in MMA
  version: ""
paths:
  /item:
    get:
      description: |-
        Get items

        Required security scopes:
          * `api:access`
      operationId: items#show
      parameters:
      - description: User ID
        in: query
        name: user
        required: false
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RegisysItemsCollection'
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: show items
      tags:
      - items
    post:
      description: |-
        Add item

        Required security scopes:
          * `api:access`
      operationId: items#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddGoodsPayload'
      responses:
        "204":
          description: No Content
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: add items
      tags:
      - items
  /item/{id}:
    delete:
      description: |-
        Delete item

        Required security scopes:
          * `api:access`
      operationId: items#delete
      parameters:
      - description: Unique item ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: delete items
      tags:
      - items
    put:
      description: |-
        Modify item

        Required security scopes:
          * `api:access`
      operationId: items#modify
      parameters:
      - description: Unique item ID
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ModifyGoodsPayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: modify items
      tags:
      - items
  /orders:
    get:
      description: |-
        Get orders

        Required security scopes:
          * `api:access`
      operationId: orders#show
      parameters:
      - description: Order date
        in: query
        name: date
        required: false
        type: string
      - description: Unique user ID
        in: query
        name: user
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RegisysOrdersCollection'
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: show orders
      tags:
      - orders
    post:
      description: |-
        Add order

        Required security scopes:
          * `api:access`
      operationId: orders#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddOrderPayload'
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: add orders
      tags:
      - orders
  /orders/{id}:
    delete:
      description: |-
        Disable order

        Required security scopes:
          * `api:access`
      operationId: orders#delete
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: delete orders
      tags:
      - orders
  /token:
    get:
      description: Create a valid JWT
      operationId: jwt#signin
      parameters:
      - description: Is member of MMA
        in: query
        name: is_member
        required: true
        type: boolean
      - description: Basic Auth Header
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Generated JWT
              type: string
          schema:
            $ref: '#/definitions/RegisysToken'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - SigninBasicAuth: []
      summary: signin jwt
      tags:
      - jwt
  /user:
    post:
      description: |-
        Add user for NOT MMA member)

        Required security scopes:
          * `api:access`
      operationId: user#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddUserPayload'
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: add user
      tags:
      - user
  /user/{id}:
    get:
      description: |-
        Show one user

        Required security scopes:
          * `api:access`
      operationId: user#show
      parameters:
      - description: Unique user ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RegisysUser'
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: show user
      tags:
      - user
    put:
      description: |-
        Modify group of user

        Required security scopes:
          * `api:access`
      operationId: user#modify
      parameters:
      - description: Unique user ID
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ModifyUserPayload'
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: modify user
      tags:
      - user
  /user/list:
    get:
      description: |-
        Show users list

        Required security scopes:
          * `api:access`
      operationId: user#showList
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RegisysUserCollection'
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: showList user
      tags:
      - user
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  Forbidden:
    description: Forbidden
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
  Unauthorized:
    description: Unauthorized
schemes:
- http
securityDefinitions:
  SigninBasicAuth:
    type: basic
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
