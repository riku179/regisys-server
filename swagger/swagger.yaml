consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  AddGoodsPayload:
    example:
      item_name: Nobis tempore eum.
      member_price: 2.494102e+16
      price: 1.29947e+18
      quantity: 5.5559257e+17
    properties:
      item_name:
        description: item name
        example: Nobis tempore eum.
        type: string
      member_price:
        description: Membership discount
        example: 2.494102e+16
        format: int64
        type: integer
      price:
        description: item price
        example: 1.29947e+18
        format: int64
        type: integer
      quantity:
        description: item quantity
        example: 5.5559257e+17
        format: int64
        type: integer
    required:
    - item_name
    - price
    - member_price
    - quantity
    title: AddGoodsPayload
    type: object
  AddOrderPayload:
    example:
      item_id: 7.849536e+18
      price: 5.152369e+18
      quantity: 8.146832e+18
      user_id: 6.6346896e+17
    properties:
      item_id:
        description: Unique item ID
        example: 7.849536e+18
        format: int64
        type: integer
      price:
        description: item price
        example: 5.152369e+18
        format: int64
        type: integer
      quantity:
        description: item quantity
        example: 8.146832e+18
        format: int64
        type: integer
      user_id:
        description: Register's user ID
        example: 6.6346896e+17
        format: int64
        type: integer
    required:
    - item_id
    - quantity
    - price
    - user_id
    title: AddOrderPayload
    type: object
  AddUserPayload:
    example:
      name: Aut illo.
      password: Dicta aperiam earum culpa eum vero dolores.
    properties:
      name:
        example: Aut illo.
        type: string
      password:
        example: Dicta aperiam earum culpa eum vero dolores.
        type: string
    required:
    - name
    - password
    title: AddUserPayload
    type: object
  GoaExampleOrders:
    description: An order (default view)
    example:
      date: 1973-09-15T18:25:32+09:00
      id: 8.49052e+18
      item_id: 4.4999475e+17
      item_name: Ducimus quasi.
      price: 2.1326141e+18
      quantity: 7.137601e+18
      user_id: 3.1358608e+18
    properties:
      date:
        description: Order date
        example: 1973-09-15T18:25:32+09:00
        format: date-time
        type: string
      id:
        description: Unique order ID
        example: 8.49052e+18
        format: int64
        type: integer
      item_id:
        description: Unique item ID
        example: 4.4999475e+17
        format: int64
        type: integer
      item_name:
        description: item name
        example: Ducimus quasi.
        type: string
      price:
        description: item price
        example: 2.1326141e+18
        format: int64
        type: integer
      quantity:
        description: item quantity
        example: 7.137601e+18
        format: int64
        type: integer
      user_id:
        description: Register's user ID
        example: 3.1358608e+18
        format: int64
        type: integer
    required:
    - id
    - item_id
    - item_name
    - quantity
    - price
    - user_id
    - date
    title: 'Mediatype identifier: application/vnd.goa.example.orders+json; view=default'
    type: object
  GoaExampleOrdersCollection:
    description: GoaExampleOrdersCollection is the media type for an array of GoaExampleOrders
      (default view)
    example:
    - date: 1973-09-15T18:25:32+09:00
      id: 8.49052e+18
      item_id: 4.4999475e+17
      item_name: Ducimus quasi.
      price: 2.1326141e+18
      quantity: 7.137601e+18
      user_id: 3.1358608e+18
    - date: 1973-09-15T18:25:32+09:00
      id: 8.49052e+18
      item_id: 4.4999475e+17
      item_name: Ducimus quasi.
      price: 2.1326141e+18
      quantity: 7.137601e+18
      user_id: 3.1358608e+18
    items:
      $ref: '#/definitions/GoaExampleOrders'
    title: 'Mediatype identifier: application/vnd.goa.example.orders+json; type=collection;
      view=default'
    type: array
  GoaExampleRegisysItems:
    description: An item (default view)
    example:
      id: 1.1690981e+18
      item_name: Voluptates maiores nemo quia molestias reprehenderit.
      member_price: 1.4690026e+18
      price: 1.6009976e+18
      quantity: 4.1943023e+18
      user_id: 5.148723e+18
      user_name: Ab officiis omnis dolorem consequatur optio delectus.
    properties:
      id:
        description: Unique item ID
        example: 1.1690981e+18
        format: int64
        type: integer
      item_name:
        description: item name
        example: Voluptates maiores nemo quia molestias reprehenderit.
        type: string
      member_price:
        description: Membership discount
        example: 1.4690026e+18
        format: int64
        type: integer
      price:
        description: item price
        example: 1.6009976e+18
        format: int64
        type: integer
      quantity:
        description: item quantity
        example: 4.1943023e+18
        format: int64
        type: integer
      user_id:
        description: Unique User ID
        example: 5.148723e+18
        format: int64
        type: integer
      user_name:
        description: Username
        example: Ab officiis omnis dolorem consequatur optio delectus.
        type: string
    required:
    - id
    - item_name
    - price
    - member_price
    - user_id
    - user_name
    - quantity
    title: 'Mediatype identifier: application/vnd.goa.example.regisys.items+json;
      view=default'
    type: object
  GoaExampleRegisysItemsCollection:
    description: GoaExampleRegisysItemsCollection is the media type for an array of
      GoaExampleRegisysItems (default view)
    example:
    - id: 1.1690981e+18
      item_name: Voluptates maiores nemo quia molestias reprehenderit.
      member_price: 1.4690026e+18
      price: 1.6009976e+18
      quantity: 4.1943023e+18
      user_id: 5.148723e+18
      user_name: Ab officiis omnis dolorem consequatur optio delectus.
    items:
      $ref: '#/definitions/GoaExampleRegisysItems'
    title: 'Mediatype identifier: application/vnd.goa.example.regisys.items+json;
      type=collection; view=default'
    type: array
  GoaExampleToken:
    description: Username and ID (default view)
    example:
      id: 8.5014976e+18
      username: Quis hic facere distinctio.
    properties:
      id:
        description: Unique user ID
        example: 8.5014976e+18
        format: int64
        type: integer
      username:
        description: Username
        example: Quis hic facere distinctio.
        type: string
    required:
    - username
    - id
    title: 'Mediatype identifier: application/vnd.goa.example.token+json; view=default'
    type: object
  GoaExampleUser:
    description: Users (default view)
    example:
      group: Reprehenderit iusto voluptatibus sed.
      id: 4.989876e+18
      name: Inventore sit unde.
    properties:
      group:
        description: Group of user
        example: Reprehenderit iusto voluptatibus sed.
        type: string
      id:
        description: Unique user ID
        example: 4.989876e+18
        format: int64
        type: integer
      name:
        description: Username
        example: Inventore sit unde.
        type: string
    required:
    - id
    - name
    - group
    title: 'Mediatype identifier: application/vnd.goa.example.user+json; view=default'
    type: object
  GoaExampleUserCollection:
    description: GoaExampleUserCollection is the media type for an array of GoaExampleUser
      (default view)
    example:
    - group: Reprehenderit iusto voluptatibus sed.
      id: 4.989876e+18
      name: Inventore sit unde.
    items:
      $ref: '#/definitions/GoaExampleUser'
    title: 'Mediatype identifier: application/vnd.goa.example.user+json; type=collection;
      view=default'
    type: array
  ModifyGoodsPayload:
    example:
      id: 8.2702076e+18
      item_name: Optio molestiae magni quae ut tenetur.
      member_price: 5.203682e+18
      price: 5.2072132e+17
      quantity: 6.3114837e+18
    properties:
      id:
        description: Unique item ID
        example: 8.2702076e+18
        format: int64
        type: integer
      item_name:
        description: item name
        example: Optio molestiae magni quae ut tenetur.
        type: string
      member_price:
        description: Membership discount
        example: 5.203682e+18
        format: int64
        type: integer
      price:
        description: item price
        example: 5.2072132e+17
        format: int64
        type: integer
      quantity:
        description: item quantity
        example: 6.3114837e+18
        format: int64
        type: integer
    required:
    - id
    title: ModifyGoodsPayload
    type: object
  ModifyUserPayload:
    example:
      group: register
    properties:
      group:
        enum:
        - admin
        - register
        - nomal
        example: register
        type: string
    required:
    - group
    title: ModifyUserPayload
    type: object
host: localhost:8080
info:
  title: Register System for Junk-Ichi in MMA
  version: ""
paths:
  /item:
    get:
      description: |-
        Get items

        Required security scopes:
          * `api:access`
      operationId: items#show
      parameters:
      - description: User ID
        in: query
        name: user
        required: false
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaExampleRegisysItemsCollection'
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: show items
      tags:
      - items
    post:
      description: |-
        Add item

        Required security scopes:
          * `api:access`
      operationId: items#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddGoodsPayload'
      responses:
        "204":
          description: No Content
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: add items
      tags:
      - items
  /item/{id}:
    delete:
      description: |-
        Delete item

        Required security scopes:
          * `api:access`
      operationId: items#delete
      parameters:
      - description: Unique item ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: delete items
      tags:
      - items
    put:
      description: |-
        Modify item

        Required security scopes:
          * `api:access`
      operationId: items#modify
      parameters:
      - description: Unique item ID
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ModifyGoodsPayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: modify items
      tags:
      - items
  /orders:
    get:
      description: |-
        Get orders

        Required security scopes:
          * `api:access`
      operationId: orders#show
      parameters:
      - description: Order date
        in: query
        name: date
        required: false
        type: string
      - description: Unique user ID
        in: query
        name: user
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaExampleOrdersCollection'
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: show orders
      tags:
      - orders
    post:
      description: |-
        Add order

        Required security scopes:
          * `api:access`
      operationId: orders#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddOrderPayload'
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: add orders
      tags:
      - orders
  /orders/{id}:
    delete:
      description: |-
        Disable order

        Required security scopes:
          * `api:access`
      operationId: orders#delete
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: delete orders
      tags:
      - orders
  /token:
    get:
      description: Create a valid JWT
      operationId: jwt#signin
      parameters:
      - description: Is member of MMA
        in: query
        name: is_member
        required: true
        type: boolean
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Generated JWT
              type: string
          schema:
            $ref: '#/definitions/GoaExampleToken'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - SigninBasicAuth: []
      summary: signin jwt
      tags:
      - jwt
  /user:
    post:
      description: |-
        Add user for NOT MMA member)

        Required security scopes:
          * `api:access`
      operationId: user#add
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddUserPayload'
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: add user
      tags:
      - user
  /user/{id}:
    get:
      description: |-
        Show one user

        Required security scopes:
          * `api:access`
      operationId: user#show
      parameters:
      - description: Unique user ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaExampleUser'
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: show user
      tags:
      - user
    put:
      description: |-
        Modify group of user

        Required security scopes:
          * `api:access`
      operationId: user#modify
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ModifyUserPayload'
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: modify user
      tags:
      - user
  /user/list:
    get:
      description: |-
        Show users list

        Required security scopes:
          * `api:access`
      operationId: user#showList
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaExampleUserCollection'
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: showList user
      tags:
      - user
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  Forbidden:
    description: Forbidden
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
  Unauthorized:
    description: Unauthorized
schemes:
- http
securityDefinitions:
  SigninBasicAuth:
    type: basic
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
